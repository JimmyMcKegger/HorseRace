<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">HorseRace</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        
        @switch (Role)
        {
            case "Manager":
            {
                <div class="nav-item px-3" id="nav-events" style="display: block;">
                    <NavLink class="nav-link" href="events">
                        <span class="bi bi-calendar2-event" aria-hidden="true"></span> Events
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="events/new" id="nav-new-event" style="display: none;">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> New Event
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="users" id="nav-users" style="display: block;">
                        <span class="bi bi-person-fill-gear" aria-hidden="true"></span> All Users
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="managers" id="nav-managers" style="display: none;">
                        <span class="bi bi-incognito" aria-hidden="true"></span> Managers
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="owners" id="nav-owners" style="display: block;">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Horse Owners
                    </NavLink>
                </div>
                break;
            }
            case "Owner":
            {
                <div class="nav-item px-3" id="nav-events" style="display: block;">
                    <NavLink class="nav-link" href="events">
                        <span class="bi bi-calendar2-event" aria-hidden="true"></span> Events
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="owners" id="nav-owners" style="display: block;">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Horse Owners
                    </NavLink>
                </div>
                
                break;
            }
            default:
            {
                <div class="nav-item px-3" id="nav-events" style="display: block;">
                    <NavLink class="nav-link" href="events">
                        <span class="bi bi-calendar2-event" aria-hidden="true"></span> Events
                    </NavLink>
                </div>
                break;
            }
        }
        @if (ValidEmail)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logout" id="nav-logout" style="display: block;">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login" id="nav-login" style="display: block;">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private const string PATTERN = @"^[\w\.\-]+@[\w\-]+\.[a-zA-Z]{2,}$";
    private string? role;
    private string? loggedInAs;
    private bool validEmail;

    [Parameter] public string? LoggedInAs { get; set; }
    [Parameter] public string? Role { get; set; }
    public bool ValidEmail { get; set; }
    
    protected override void OnParametersSet()
    {
        loggedInAs = LoggedInAs;
        Console.WriteLine(loggedInAs);
        role = Role;
        Console.WriteLine(role);

        if (!string.IsNullOrEmpty(loggedInAs))
        {
            Regex rg = new Regex(PATTERN);
            ValidEmail = rg.IsMatch(loggedInAs);
        }
        else
        {
            ValidEmail = false;
        }
    }
}