@page "/owners"
@inject IJSRuntime Js


<PageTitle>Owners</PageTitle>

<h1>Owners page</h1>
<br>
@if (ownerList != null && ownerList?.Count > 0)
{
    <div class="container">
        @foreach (var owner in ownerList)
        {
            <div class="card d-none" style="width:auto;" id=@owner.Id>
                <div class="card-body">
                    <h5 class="card-title">@owner.Name</h5>
                    <a href="owners/@owner.Id" class="btn btn-primary">Edit</a>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No users</p>
}

@code {
    private readonly List<User> ownerList = Owner.LoadOwners();
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("Showing Profiles");
            ShowOnlyOwnProfile();
        }
    }
    private async Task ShowOnlyOwnProfile()
    {
        var role = await Js.InvokeAsync<string>("getCookie", "access_role");
        Console.WriteLine($"role: {role}");
        var userEmail = await Js.InvokeAsync<string>("getCookie", "access_token");
        var user = User.GetUserByEmail(userEmail);
        await Js.InvokeVoidAsync("ShowOwnerProfile", role, user?.Id);
    }
}